// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                 String  @id @default(cuid())
  address            String
  type               String
  provider           String
  providerAccountId  String  @map("provider_account_id")
  refresh_token      String?
  access_token       String?
  expires_at         Int?
  token_type         String?
  scope              String?
  id_token           String?
  session_state      String?
  oauth_token_secret String?
  oauth_token        String?

  user User @relation(fields: [address], references: [address], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  address      String
  expires      DateTime
  user         User     @relation(fields: [address], references: [address], onDelete: Cascade)
}

model User {
  address        String    @unique
  name           String?
  email          String?
  accounts       Account[]
  sessions       Session[]
  followerCount  Int       @default(0)
  followingCount Int       @default(0)
  posts          Post[]
}

model Relationship {
  id        String    @id @default(cuid())
  from      String
  to        String
  type      Int
  timestamp DateTime?
}

model Post {
  id             String    @id @default(cuid())
  postId         String
  creatorAddress String
  creator        User      @relation(fields: [creatorAddress], references: [address], onDelete: Cascade)
  startTime      DateTime?
  endTime        DateTime?
  playbackId     String
  isLivestream   Boolean
  likesCount     Int       @default(0)
  title          String
  description    String
  thumbnailUrl   String?
  productLink     String
}

model VerificationToken {
  id         Int      @id @default(autoincrement())
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
